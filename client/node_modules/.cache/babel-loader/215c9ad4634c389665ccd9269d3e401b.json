{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\src\\\\user\\\\pages\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Login Recuired\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(8)],\n    errorText: \"Please enter a valid password, at list 8 character\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","email","value","isValid","password","switchModeHandler","prevMode","authSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport './Auth.css';  \r\n\r\nconst Auth = () => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = event => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"authentication\">\r\n      <h2>Login Recuired</h2>\r\n      <hr />\r\n      <form className=\"place-form\" onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n          id=\"name\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Your Name\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a name.\"\r\n          onInput={inputHandler}\r\n        />\r\n        )}\r\n        <Input\r\n          id=\"email\"\r\n          element=\"input\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"password\"\r\n          element=\"input\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(8)]}\r\n          errorText=\"Please enter a valid password, at list 8 character\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form>\r\n      <Button inverse onClick={switchModeHandler} >\r\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n      </Button>\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}