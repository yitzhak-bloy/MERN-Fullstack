{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\client\\\\src\\\\user\\\\pages\\\\Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(response.massage);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err.massage);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModel, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), \";\");\n};\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/client/src/user/pages/Users.js"],"names":["React","useEffect","useState","UsersList","ErrorModel","LoadingSpinner","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","Error","massage","users","err","errorHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAY;AAC9BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AAEA,YAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;AACf,gBAAM,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,OAAnB,CAAN;AACD;;AAEDR,QAAAA,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;AACD,OATD,CASE,OAAMC,GAAN,EAAW;AACXZ,QAAAA,QAAQ,CAACY,GAAG,CAACF,OAAL,CAAR;AACD;;AACDZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAfD;;AAgBAK,IAAAA,WAAW;AACZ,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBAU,EAAAA,YAAY,GAAG,MAAM;AACnBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED,KAAnB;AAA0B,IAAA,OAAO,EAAEc,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEChB,SAAS,iBACR;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAOA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEI,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,MADF;AAaD,CA1CD;;AA4CA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true)\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if(!response.ok) {\n          throw new Error(response.massage)\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch(err) {\n        setError(err.massage);\n      }\n      setIsLoading(false);\n    };\n    sendRequest()\n  }, [])\n\n  errorHandler = () => {\n    setError(null);\n  }\n\n  return (\n    <React.Fragment >\n    <ErrorModel error={error} onClear={errorHandler} />\n    {isLoading && (\n      <div className=\"center\" >\n        <LoadingSpinner />\n      </div>\n    )}\n    <UsersList items={loadedUsers} />;\n\n    </React.Fragment>\n  )\n\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}