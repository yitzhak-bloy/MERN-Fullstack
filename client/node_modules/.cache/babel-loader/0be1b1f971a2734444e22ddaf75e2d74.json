{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\src\\\\App.js\";\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Users from './user/pages/Users';\nimport Auth from './user/pages/Auth';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/Auth-context';\n\nconst App = () => {\n  const [isLoggedin, setIsLoggedin] = useState(false);\n  const login = useCallback(() => {\n    setIsLoggedin(true);\n  }, []);\n  const logout = useCallback(() => {\n    setIsLoggedin(false);\n  }, []);\n  let routes;\n\n  if (isLogged) {// routes = ()\n  } else {\n    routes = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UserPlaces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedin,\n      login: login,\n      logout: logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Users, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/:userId/places\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserPlaces, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/places/new\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NewPlace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/places/:placeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UpdatePlace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/src/App.js"],"names":["React","useState","useCallback","BrowserRouter","Router","Route","Redirect","Switch","Users","Auth","NewPlace","UserPlaces","UpdatePlace","MainNavigation","AuthContext","App","isLoggedin","setIsLoggedin","login","logout","routes","isLogged","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport Auth from './user/pages/Auth';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/Auth-context';\n\nconst App = () => {\n  const [isLoggedin, setIsLoggedin] = useState(false)\n\n  const login = useCallback(() => {\n    setIsLoggedin(true);\n  }, []);\n \n  \n  const logout = useCallback(() => {\n    setIsLoggedin(false);\n  }, []);\n\n  let routes;\n\n  if (isLogged) {\n    // routes = ()\n  } else {\n    routes = (\n      <React.Fragment>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/Auth\">\n          <Auth />\n        </Route>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <AuthContext.Provider \n      value={{ isLoggedIn: isLoggedin, login: login, logout: logout}} \n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n              <UserPlaces />\n            </Route>\n            <Route path=\"/places/new\" exact>\n              <NewPlace />\n            </Route>\n            <Route path=\"/places/:placeId\">\n              <UpdatePlace />\n            </Route>\n            <Route path=\"/Auth\">\n              <Auth />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}