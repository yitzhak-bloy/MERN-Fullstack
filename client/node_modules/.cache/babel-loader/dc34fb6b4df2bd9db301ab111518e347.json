{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\client\\\\src\\\\places\\\\pages\\\\UserPlaces.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(deletedPlaceId => prevPlaces.id !== deletedPlaceId));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModel, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), !isLoading && loadedPlaces && /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlaces,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 38\n    }\n  }));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/client/src/places/pages/UserPlaces.js"],"names":["React","useEffect","useState","useParams","PlaceList","ErrorModel","LoadingSpinner","useHttpClient","UserPlaces","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","placeDeletedHandler","deletedPlaceId","prevPlaces","filter","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM;AAACS,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,MAA8CP,aAAa,EAAjE;AAEA,QAAMQ,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,yCAAwCE,MAAO,EADZ,CAAtC;AAIAL,QAAAA,eAAe,CAACO,YAAY,CAACC,MAAd,CAAf;AACD,OAND,CAME,OAAMC,GAAN,EAAW,CAAE;AAChB,KARD;;AASAH,IAAAA,WAAW;AACZ,GAXQ,EAWN,CAACH,WAAD,EAAcE,MAAd,CAXM,CAAT;;AAaA,QAAMK,mBAAmB,GAAGC,cAAc,IAAI;AAC5CX,IAAAA,eAAe,CAACY,UAAU,IACxBA,UAAU,CAACC,MAAX,CAAkBF,cAAc,IAAIC,UAAU,CAACE,EAAX,KAAkBH,cAAtD,CADa,CAAf;AAGD,GAJD;;AAMA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAET,KAAnB;AAA0B,IAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,SAAS,iBACR;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,EAOG,CAACA,SAAD,IAAcF,YAAd,iBAA8B,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,YAAlB;AAAgC,IAAA,aAAa,EAAEW,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPjC,CADF;AAWD,CApCD;;AAsCA,eAAeZ,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n  \r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        \r\n        setLoadedPlaces(responseData.places);\r\n      } catch(err) {}\r\n    };\r\n    fetchPlaces()\r\n  }, [sendRequest, userId])\r\n\r\n  const placeDeletedHandler = deletedPlaceId => {\r\n    setLoadedPlaces(prevPlaces => \r\n      prevPlaces.filter(deletedPlaceId => prevPlaces.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <ErrorModel error={error} onClear={clearError} /> \r\n      {isLoading && (\r\n        <div className=\"center\" >\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\r\n    </React.Fragment>\r\n  ) \r\n};\r\n\r\nexport default UserPlaces;"]},"metadata":{},"sourceType":"module"}