{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\n\nconst inputReduser = (state, action) => {\n  switch (action.type) {\n    case 'CHANGH':\n      return { ...state,\n        value: action.val,\n        isValide: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReduser, {\n    value: '',\n    isValide: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGH',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValide && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, props.label), element, !inputState.isValide && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReduser","state","action","type","value","val","isValide","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFT;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF;AACA,aAAOL,KAAP;AARF;AAUD,CAXD;;AAaA,MAAMM,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACC,YAAD,EAAe;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYE,IAAAA,QAAQ,EAAC;AAArB,GAAf,CAAzC;;AAEA,QAAMK,aAAa,GAAGC,KAAK,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMU,OAAO,GACXN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACE;AACE,IAAA,EAAE,EAAEN,KAAK,CAACO,EADZ;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACL,IAFd;AAGE,IAAA,WAAW,EAAEK,KAAK,CAACQ,WAHrB;AAIE,IAAA,QAAQ,EAAEL,aAJZ;AAKE,IAAA,KAAK,EAAEF,UAAU,CAACL,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBASE;AACE,IAAA,EAAE,EAAEI,KAAK,CAACO,EADZ;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAFtB;AAGE,IAAA,KAAK,EAAER,UAAU,CAACL,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAG,gBAAe,CAACK,UAAU,CAACH,QAAZ,IAAwB,uBAAwB,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEE,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACU,KAAjC,CADF,EAEGJ,OAFH,EAGG,CAACL,UAAU,CAACH,QAAZ,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAK,CAACW,SAAV,CAH3B,CADF;AAOD,CA/BD;;AAiCA,eAAeZ,KAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport './Input.css';\n\nconst inputReduser = (state, action) => {\n  switch (action.type) {\n    case 'CHANGH':\n      return {\n        ...state,\n        value: action.val,\n        isValide: true\n      }\n    default:\n    return state; \n  }\n}\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReduser, {value: '', isValide:false});\n\n  const changeHandler = event => {\n    dispatch({ type: 'CHANGH', val: event.target.value });\n  }\n\n  const element =\n    props.element === 'input' ? (\n      <input \n        id={props.id} \n        type={props.type} \n        placeholder={props.placeholder} \n        onChange={changeHandler} \n        value={inputState.value}\n      />\n    ) : (\n      <textarea \n        id={props.id} \n        rows={props.rows || 3} \n        value={inputState.value} \n      />\n    );\n\n  return (\n    <div className={`form-control ${!inputState.isValide && 'form-control--invalid'}`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValide && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}