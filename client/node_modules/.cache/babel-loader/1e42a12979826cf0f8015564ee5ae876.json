{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05E6\\u05D9\\u05E7 \\u05D5\\u05DE\\u05DC\\u05DB\\u05D9\\\\Desktop\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\ProjectsInGithub\\\\MERN Fullstack\\\\client\\\\src\\\\places\\\\pages\\\\NewPlace.js\";\nimport React, { useContext } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/Auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequset,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequset('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: auth.userId\n      }));\n    } catch (err) {}\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["C:/Users/איציק ומלכי/Desktop/מסמכים/ProjectsInGithub/MERN Fullstack/client/src/places/pages/NewPlace.js"],"names":["React","useContext","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequset","clearError","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","userId","err"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/Auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequset, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequset(\n        'http://localhost:5000/api/users/login',\n        'POST',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description : formState.inputs.description.value,\n          address : formState.inputs.address.value,\n          creator : auth.userId\n        })\n      )  \n    } catch(err) {};\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}