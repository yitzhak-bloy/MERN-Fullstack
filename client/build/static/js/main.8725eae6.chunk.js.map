{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/Auth-context.js","user/pages/Auth.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReduser","state","action","isValide","isTouched","Input","useReducer","initialValue","initialvalid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previeUrl","setPrevieUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inpusData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Auth","auth","useContext","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","JSON","stringify","formData","FormData","append","undefined","prevMode","NewPlace","title","description","address","history","useHistory","placeSubmitHandler","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","LoadedPlace","setLoadingPlace","placeId","fetchPlace","placeUpdateSubmitHandler","initialValid","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerhandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.8725eae6.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({ userId: uid, token: token, expiration: tokenExpirationDate.toISOString()})\n    )\n  }, []);\n \n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userDate');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return {token, login, logout, userId};\n}","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={process.env.REACT_APP_ASSET_URL + `/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {} ) => {\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong, please try again.');\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n      setError(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n      }\r\n    }, [])\r\n  \r\n    return { isLoading, error, sendRequest, clearError };\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users'\r\n        );\r\n        \r\n        setLoadedUsers(responseData.users);\r\n      } catch(err) {}\r\n    };\r\n    fetchUsers()\r\n  }, [sendRequest])\r\n\r\n  return (\r\n    <React.Fragment >\r\n    <ErrorModel error={error} onClear={clearError} />\r\n    {isLoading && (\r\n      <div className=\"center\" >\r\n        <LoadingSpinner />\r\n      </div>\r\n    )}\r\n    {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n\r\n    </React.Fragment>\r\n  )\r\n\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators'\nimport './Input.css';\n\nconst inputReduser = (state, action) => {\n  switch (action.type) {\n    case 'CHANGH':\n      return {\n        ...state,\n        value: action.val,\n        isValide: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n    return state; \n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReduser, {\n    value: props.initialValue || '',\n    isTouched: false, \n    isValide: props.initialvalid || false\n  });\n\n  const {id, onInput } = props;\n  const { value, isValide } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValide)\n  }, [onInput, id, value, isValide]);\n\n  const changeHandler = event => {\n    dispatch({ \n      type: 'CHANGH', \n      val: event.target.value, \n      validators: props.validators \n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input \n        id={props.id} \n        type={props.type} \n        placeholder={props.placeholder} \n        onChange={changeHandler} \n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea \n        id={props.id} \n        rows={props.rows || 3} \n        onChange={changeHandler} \n        onBlur={touchHandler}\n        value={inputState.value} \n      />\n    );\n\n  return (\n    <div className={`form-control ${!inputState.isValide && inputState.isTouched && \n      'form-control--invalid'}`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValide && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previeUrl, setPrevieUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  \n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPrevieUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  },[file])\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1)  {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n \n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previeUrl && <img src={previeUrl} alt=\"Preview\" />}\n          {!previeUrl && <p>Please pick an imege</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n      case 'SET_DATA':\n        return {\n          inputs: action.inputs,\n          isValid: action.formIsValid\n        }\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inpusData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inpusData, \n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/Auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    \r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login', \r\n          'POST', \r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }), \r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('name',formState.inputs.name.value);\r\n        formData.append('email',formState.inputs.email.value);\r\n        formData.append('password',formState.inputs.password.value);\r\n        formData.append('image',formState.inputs.image.value);\r\n        const responseData =  await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n          'POST',\r\n          formData,\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUpload \r\n            center \r\n            id='image' \r\n            onInput={inputHandler} \r\n            errorText=\"Please provide an image\" \r\n          />}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/Auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title',formState.inputs.title.value);\r\n      formData.append('description',formState.inputs.description.value);\r\n      formData.append('address',formState.inputs.address.value);\r\n      formData.append('image',formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\r\n        Authorization: 'bearer ' +  auth.token\r\n      });\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload \r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/Auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={process.env.REACT_APP_ASSET_URL +  `/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = deletedPlaceId => {\r\n    setLoadedPlaces(prevPlaces =>\r\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport ErrorModel from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/Auth-context';\r\nimport './PlaceForm.css';\r\n\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n  const [LoadedPlace, setLoadingPlace] = useState() \r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n    \r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`\r\n        );\r\n        \r\n        setLoadingPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );  \r\n      } catch(err) {}\r\n    };\r\n    fetchPlace()\r\n  }, [sendRequest, placeId, setFormData])\r\n  \r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`, \r\n        'PATCH', \r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }), \r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'bearer ' +  auth.token\r\n        }\r\n      );\r\n\r\n      history.push(`/${auth.userId}/places`);\r\n    } catch(err) {};\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner /> \r\n      </div>\r\n    );    \r\n  }\r\n\r\n  if (!LoadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModel error={error} onClear={clearError} />\r\n      {!isLoading && LoadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={LoadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={LoadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/Auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return <ul className=\"nav-links\">\n    <li>\n      <NavLink to=\"/\" exact>ALL USERS</NavLink>\n    </li>\n    {auth.isLoggedIn && (\n      <li>\n        <NavLink to={`${auth.userId}/places`}>MY PLACES</NavLink>\n      </li> \n    )}\n    {auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n      </li>\n    )}\n    {!auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n      </li>\n    )}\n    {auth.isLoggedIn && (\n      <li>\n        <button onClick={auth.logout}>LOGOUT</button>\n      </li>\n    )}\n  </ul>\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer'\nimport Backdrop from '../UIElements/Backdrop'\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerhandler = () => {\n    setDrawerIsOpen(true)\n  }\n\n  const closeDrawerhandler = () => {\n    setDrawerIsOpen(false)\n  }\n\n  return (\n    <>\n    {drawerIsOpen && <Backdrop onClick={closeDrawerhandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerhandler} >\n        <nav className='main-navigation__drawer-nav'>\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button onClick={openDrawerhandler} >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className='main-navigation__title'>\n          <Link to='/' >YourPlaces</Link>\n        </h1>\n        <nav className='main-navigation__header-nav'>\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </>\n  )\n}\n\nexport default MainNavigation;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport Users from './user/pages/Users';\r\nimport Auth from './user/pages/Auth';\r\nimport NewPlace from './places/pages/NewPlace';\r\nimport UserPlaces from './places/pages/UserPlaces';\r\nimport UpdatePlace from './places/pages/UpdatePlace';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/Auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n     routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route> \r\n        <Redirect to='/' />\r\n      </Switch>     \r\n     )\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/Auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to='/auth' />\r\n      </Switch>     \r\n    )\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        isLoggedIn: !!token,\r\n        token: token, \r\n        userId: userId, \r\n        login: login, \r\n        logout: logout \r\n      }} \r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>{routes}</main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}